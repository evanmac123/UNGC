= render :partial => '/shared/cops/cop_info_header', :locals => { :communication_on_progress => communication_on_progress }

- if communication_on_progress.cop_files.any?
  %dt Files
  %dd
    %ul
      - for cop_file in communication_on_progress.cop_files
        %li
          = link_to truncate(cop_file.attachment_file_name, :length => 50), cop_file.attachment.url
          == (#{cop_file.language.name})

- if communication_on_progress.cop_links.any?
  %dt Links
  %dd
    %ul
      - for cop_link in communication_on_progress.cop_links
        %li
          = link_to truncate(cop_link.url, :length => 50), cop_link.url
          == (#{cop_link.language.name})

%dt Format
%dd
  %ul
    %li= CommunicationOnProgress::COE_FORMAT[communication_on_progress.format.try(:to_sym)] || 'Unknown'

%dt
  Self-assessment
%dd
  %ul.self_assessment
    %li{:class => select_answer_class(communication_on_progress.include_continued_support_statement?) }
      Includes an explicit statement of continued support for the UN Global Compact and its ten principles
    %li{:class => select_answer_class(communication_on_progress.include_measurement?) }
      Includes a measurement of outcomes

%dt Actions
%dd.indent= show_cop_attributes(communication_on_progress, nil, nil, communication_on_progress.non_business_type)
