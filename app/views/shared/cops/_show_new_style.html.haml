- if communication_on_progress.cop_files.any?
  %dt Files:
  %dd
    %ul
      - for cop_file in communication_on_progress.cop_files
        %li
          = link_to cop_file.attachment_file_name, cop_file.attachment.url
          == [#{cop_file.language.name}]
- if communication_on_progress.cop_links.any?
  %dt Links:
  %dd
    %ul
      - for cop_link in communication_on_progress.cop_links
        %li
          = link_to cop_link.url, cop_link.url
          == [#{cop_link.language.name}]
%dt Details:
%dd
  %ul
    - if communication_on_progress.include_continued_support_statement?
      %li COP includes an explicit statement of continued support for the UN Global Compact and the Ten Principles
    - if communication_on_progress.parent_company_cop?
      %li This is the COP of a parent company
      - if communication_on_progress.parent_cop_cover_subsidiary?
        %li COP of parent company covers the efforts made by subsidiary to implement the Global Compact principles
    %li= CommunicationOnProgress::FORMAT[communication_on_progress.format.try(:to_sym)]

/ - if logged_in? || params[:action] == 'feed'
- PrincipleArea::FILTERS.each_pair do |key, value|
  - if communication_on_progress.send("references_#{key}?") && (communication_on_progress.notable_program? || communication_on_progress.additional_questions?)
    %dt
      %span{:class => "#{value.gsub(/ /,'').tableize.singularize}" }= value
      %span{:class => "coverage" }= show_issue_area_coverage(communication_on_progress, key)
    %dd
      %ul= show_cop_attributes(communication_on_progress, PrincipleArea.send(key).id, communication_on_progress.send("references_#{key}?"), 'additional')

- if communication_on_progress.notable_program?
  %dt Notable Program
  %dd
    %ul= show_cop_attributes(communication_on_progress, nil, nil, 'notable')
    
- if communication_on_progress.cop_answers.by_group(:governance).count > 0
  %dt Governance
  %dd
    %ul= show_cop_attributes(communication_on_progress, nil, nil, 'governance')