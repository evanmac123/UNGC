<%# workaround for two tree view plugin issues %>
<script type="text/javascript" charset="utf-8" src='/javascripts/jquery.tree.js'></script>
<% if true %>
<script>
function showPage (argument) {
  $('#loading').hide();
}

// $(function () { 
//  $("#tree").tree({
//    ui: {
//      dots: false,
//      theme_name: 'apple'
//    },
//    callback: {
//      onselect: function(node, tree) {
//        $('#loading').show();
//        var url = $(node).children('a').attr('href') + '.js';
//        jQuery.ajax({
//          type: 'get',
//          url: url,
//          dataType: 'script',
//          success: showPage,
//          
//        });
//      }
//    }
//  });
// });

function successfullyCreated (response) {
  console.log(response);
}

var selected = null;
$(function () { 
	$("#tree").tree({
     ui: {
       dots: false,
       theme_name: 'apple'
     },
		data : { 
			type : "json",
			opts : {
				url : "/admin/pages.js"
			}
		},
		types: {
		  'page': {
		    'icon': {
		      'image': '/images/page_white.png'
		    }
		  },
		  'section': {
		    'icon': {
		      'image': '/images/folder.png'
		    }
		  }
		},
    callback: {
      check_move: function(node, ref_node, type, tree_obj) {
        var ref_type = tree_obj.get_type(ref_node);
        var node_type = tree_obj.get_type(node);
        if (node_type == 'page') {
          if (ref_type == 'section' && type != 'inside')
            return false;
        } else if (node_type == 'section') {
          if (type == 'inside' || ref_type == 'page')
            return false;
        }
      },
      ondblclk: function(node, tree) {
        $.tree.focused().rename();
        // console.log("double clicked dood!");
      },
      oncreate: function(node, ref_node, type, tree_obj, rollback) {
        var url = window.location.href + '.js';
        var time = new Date().getTime();
        var title = tree_obj.get_text(node);
        title += ' ' + time; // add timestamp to title for path
        $(node).addClass('updateAfterRename').addClass('pending');
        if (type == 'after') {
          // ref_node is not the parent, it's the nearest sibling, go up and get the real parent
          var parent_id = $(ref_node).parents('li').attr('id');
          jQuery.ajax({
            type: 'post',
            url: url,
            dataType: 'json',
            data: "page[title]="+title+"&page[derive_path_from]="+parent_id,
            success: function(response) { $(node).attr( { id: "page_"+response.page.id } ) }
          });
        }
      },
      onrename: function(node, tree, rollback) {
        // TODO: if class =~ /updateAfterRename/ then update Rails and remove class
      },
      onselect: function(node, tree) {
        if (selected != node) {
          selected = node; // FIXME: global variables might be evil
          var url = $(node).children('a').attr('href');
          if (url != '') {
            $('#loading').show();
            url += '.js';
            jQuery.ajax({
              type: 'get',
              url: url,
              dataType: 'script',
              success: showPage
            });
          }
        }
      }
     }
	});
});


</script>
<% end %>